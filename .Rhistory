devtools::document()
>
?
?
daf
?
adsfsdaf
?fars_read
help(fars_read)
devtools::document()
help("fars_read")
?mutate
help("fars_read")
getwd("")
getwd()
devtools::document()
?fars_read
devtools::document()
?fars_read
devtools::document()
?fars_read
setwd("https://www.rdocumentation.org/packages/dplyr/versions/0.5.0/topics/tbl_df")
getwd()
setwd("https://www.rdocumentation.org/packages/dplyr/versions/0.5.0/topics/tbl_df")
setwd("/Users/sommpd10/Desktop/Programming Resources/datasciencecoursera/Building-R-Packages/data/accident_2015.csv.bz2")
setwd("/Users/sommpd10/Desktop/Programming Resources/datasciencecoursera/Building-R-Packages/data/")
source("/Users/sommpd10/Desktop/Programming Resources/datasciencecoursera/Building-R-Packages/courseratestv1/R/fars_read.R")
fars_read("test.csv")
devtools::document()
?fars_read
getwd()
setwd("/Users/sommpd10/Desktop/Programming Resources/datasciencecoursera/Building-R-Packages/")
devtools::document()
?fars_read
?make_filename
devtools::document()
?make_filename
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?make_filename
devtools::document()
?make_filename
devtools::document()
?fars_read_years
devtools::document()
?fars_read_years
?fars_summarize_years
devtools::document()
?fars_summarize_years
devtools::document()
?fars_summarize_years
devtools::document()
?fars_summarize_years
devtools::document()
?fars_summarize_years
devtools::document()
?fars_map_state()
devtools::document()
?fars_read
library(data.table)
library(bit64)
library(fasttime)
data_in <- "~/Box Sync/DIHI Analytics Sepsis Project/Labs Data/Input Data Files/"
data_out <- "~/Box Sync/DIHI Analytics Internal Folder/Data Processing Product/Labs/Data/Raw/"
source("~/Box Sync/DIHI Analytics Internal Folder/Deidentification/create_lookup.R")
source("~/Box Sync/Home Folder mpd10/Sync/DIHI/Analytics Wiki/Functions/Clean_DEDUCE.R")
setwd(data_in)
labs <- fread("sepsis_labs_v2.csv")
labs[,PCR_RESULT_DATE := fastPOSIXct(PCR_RESULT_DATE)]
labs[,ORDER_TIME := fastPOSIXct(ORDER_TIME)]
labs[,RESULT_TIME := fastPOSIXct(RESULT_TIME)]
labs[,COLLECTED_DATE_TIME := fastPOSIXct(COLLECTED_DATE_TIME)]
labs[,RECEIVED_DATE_TIME := fastPOSIXct(RECEIVED_DATE_TIME)]
head(labs)
labs[,c("HSP_ACCOUNT_ID") := NULL]
set.seed(123)
date_jitter <- sample(1:10, nrow(labs), replace = TRUE)
labs <- cbind(labs,date_jitter)
labs[,':=' (PCR_RESULT_DATE_2 = PCR_RESULT_DATE + date_jitter,
ORDER_TIME = ORDER_TIME + date_jitter*(60*60*24),
RESULT_TIME = RESULT_TIME + date_jitter*(60*60*24),
COLLECTED_DATE_TIME = COLLECTED_DATE_TIME + date_jitter*(60*60*24),
RECEIVED_DATE_TIME = RECEIVED_DATE_TIME + date_jitter*(60*60*24))]
test <- labs[,.(PCR_RESULT,PCR_RESULT_DATE_2)]
test <- labs[,.(PCR_RESULT_DATE,PCR_RESULT_DATE_2)]
head(test)
#### Summary: Deidentify sepsis lab data
#### Date Created: June 5, 2017
#### Author: Mark Sendak
############################ prepare environment ############################
## load packages
library(data.table)
library(bit64)
library(fasttime)
## set directories
data_in <- "~/Box Sync/DIHI Analytics Sepsis Project/Labs Data/Input Data Files/"
data_out <- "~/Box Sync/DIHI Analytics Internal Folder/Data Processing Product/Labs/Data/Raw/"
## load functions
source("~/Box Sync/DIHI Analytics Internal Folder/Deidentification/create_lookup.R")
source("~/Box Sync/Home Folder mpd10/Sync/DIHI/Analytics Wiki/Functions/Clean_DEDUCE.R")
############################ load and prep labs data ############################
## Load and fix column names, classes
setwd(data_in)
labs <- fread("sepsis_labs_v2.csv")
## Fix column classes
labs[,PCR_RESULT_DATE := fastPOSIXct(PCR_RESULT_DATE)]
labs[,ORDER_TIME := fastPOSIXct(ORDER_TIME)]
labs[,RESULT_TIME := fastPOSIXct(RESULT_TIME)]
labs[,COLLECTED_DATE_TIME := fastPOSIXct(COLLECTED_DATE_TIME)]
labs[,RECEIVED_DATE_TIME := fastPOSIXct(RECEIVED_DATE_TIME)]
## Drop identifiers
labs[,c("HSP_ACCOUNT_ID") := NULL]
############################ load and prep demographic data ############################
demo <- fread("/Users/sommpd10/Box Sync/DIHI Analytics Sepsis Project/Demographic Data/Output Data Files/sepsis_pt_demographics.csv")
## Fix date column
demo[,DATE_OF_BIRTH := as.Date(DATE_OF_BIRTH, format = "%d-%b-%y")]
## Fix century for birthdays after 2000
demo[DATE_OF_BIRTH > "2000-01-01",DATE_OF_BIRTH := (as.Date(DATE_OF_BIRTH) - (100*365.25)), by = PATIENT_MRN]
############################ Generate lookup table ############################
## Create lookup table
lookup <- create_lookup(labs, "PATIENT_MRN")
############################ De-identify labs ############################
## Add column for date jitter
set.seed(123)
date_jitter <- sample(1:10, nrow(labs), replace = TRUE)
labs <- cbind(labs,date_jitter)
## Jitter dates
labs[,':=' (PCR_RESULT_DATE = PCR_RESULT_DATE + date_jitter,
ORDER_TIME_2 = ORDER_TIME + date_jitter*(60*60*24),
RESULT_TIME = RESULT_TIME + date_jitter*(60*60*24),
COLLECTED_DATE_TIME = COLLECTED_DATE_TIME + date_jitter*(60*60*24),
RECEIVED_DATE_TIME = RECEIVED_DATE_TIME + date_jitter*(60*60*24))]
labs[,date_jitter := NULL]
test <- labs[,.(ORDER_TIME,ORDER_TIME_2)]
head(test)
date_jitter
head(test)
getwd()
document()
library(devtools)
document()
load()
build()
document()
?fars_read
library(devtools)
use_travis()
build()
document()
build()
build()
document()
build()
library(devtools)
build()
build()
build()
?fars_read
library(courseratestv1)
install.packages("courseratestv1")
build()
library(dplyr)
install.packages("dplyr")
?tbl_df
library(dplyr)
?tbl_df
?mutate
?select
?bind_rows
?group_by
?summarize
install.packages("dplyr")
install.packages("dplyr")
install.packages("readr")
install.packages("tidyr")
